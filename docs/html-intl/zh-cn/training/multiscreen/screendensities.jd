page.title=支持各种屏幕密度
parent.title=针对多种屏幕进行设计
parent.link=index.html

trainingnavtop=true
previous.title=支持各种屏幕尺寸
previous.link=screensizes.html
next.title=实施自适应用户界面流程
next.link=adaptui.html

@jd:body


<!-- This is the training bar -->
<div id="tb-wrapper"> 
<div id="tb"> 

<h2>本教程将指导您</h2>
<ol>
  <li><a href="#TaskUseDP">使用非密度制约像素</a></li>
  <li><a href="#TaskProvideAltBmp">提供备用位图</a></li>
</ol>

<h2>您还应参阅</h2>

<ul>
  <li><a href="{@docRoot}guide/practices/screens_support.html">支持多种屏幕</a></li>
  <li><a href="{@docRoot}guide/practices/ui_guidelines/icon_design.html">图标设计指南</a></li>
</ul>

<h2>试试看</h2>
 
<div class="download-box"> 
<a href="http://developer.android.com/shareables/training/NewsReader.zip" class="button">下载示例应用</a>
<p class="filename">NewsReader.zip</p> 
</div> 
 
 
</div> 
</div> 

<p>本教程将向您介绍如何通过提供不同资源和使用独立于分辨率的测量单位来支持不同屏幕密度。</p>

<h2 id="TaskUseDP">使用非密度制约像素</h2>

<p>在设计布局时，大家经常会误使用绝对像素来定义距离或尺寸，您一定要避免犯这种错误。由于各种屏幕的像素密度都有所不同，因此相同数量的像素在不同设备上的实际大小也有所差异，这样使用像素定义布局尺寸就会产生问题。因此，请务必使用 <code>dp</code> 或 <code>sp</code> 单位指定尺寸。<code>dp</code> 是一种非密度制约像素，其尺寸与 160 dpi 像素的实际尺寸相同。<code>sp</code> 也是一种基本单位，但它可根据用户的偏好文字大小进行调整（即尺度独立性像素），因此您应将该测量单位用于定义文字大小（请勿用其定义布局尺寸）。</p>

<p>例如，请使用 <code>dp</code>（而非 <code>px</code>）指定两个视图间的间距：</p>

<pre>
&lt;Button android:layout_width="wrap_content" 
    android:layout_height="wrap_content" 
    android:text="&#64;string/clickme"
    android:layout_marginTop="20dp" /&gt;
</pre>

<p>请务必使用 <code>sp</code> 指定文字大小：</p>

<pre>
&lt;TextView android:layout_width="match_parent" 
    android:layout_height="wrap_content" 
    android:textSize="20sp" /&gt;
</pre>


<h2 id="TaskProvideAltBmp">提供备用位图</h2>

<p>由于 Android 可在具有各种屏幕密度的设备上运行，因此您提供的位图资源应始终可以满足各类普遍密度范围的要求：低密度、中等密度、高密度以及超高密度。这将有助于您的图形在所有屏幕密度上都能得到出色的质量和效果。</p>

<p>要生成这些图片，您应先提取矢量格式的原始资源，然后根据以下尺寸范围针对各密度生成相应的图片。</p>

<p><ul>
  <li><code>xhdpi</code>：2.0
  <li><code>hdpi</code>：1.5
  <li><code>mdpi</code>：1.0（最低要求）
  <li><code>ldpi</code>：0.75
</ul></p>

<p>也就是说，如果您为 <code>xhdpi</code> 设备生成了 200x200 尺寸的图片，就应该使用同一资源为 <code>hdpi</code>、<code>mdpi</code> 和 <code>ldpi</code> 设备分别生成 150x150、100x100 和 75x75 尺寸的图片。</p>

<p>然后，将生成的图片文件放在 <code>res/</code> 下的相应子目录中（如下所示），系统就会根据运行您应用的设备的屏幕密度自动选择合适的图片：</p>

<pre class="classic no-pretty-print">
MyProject/
  res/
    drawable-xhdpi/
        awesomeimage.png
    drawable-hdpi/
        awesomeimage.png
    drawable-mdpi/
        awesomeimage.png
    drawable-ldpi/
        awesomeimage.png
</pre>

<p>这样一来，无论您何时引用 <code>&#64;drawable/awesomeimage</code>，系统都能根据相应屏幕的 dpi 选取合适的位图。</p>

<p>有关为您的应用创建图标资产的更多提示和指南，请参阅<a
href="{@docRoot}guide/practices/ui_guidelines/icon_design.html">图标设计指南</a>。</p>

