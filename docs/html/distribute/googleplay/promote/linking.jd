page.title=Linking to Your Products
@jd:body

<div class="sidebox-wrapper">
<div class="sidebox">
<a href="badges.html">
  <img alt="Get it on Google Play"
       src="{@docRoot}images/brand/en_app_rgb_wo_45.png" />
</a>
<p>For a link that includes the Google Play brand icon, check out the <a href="badges.html">Badges</a> page. </p>
</div>
</div>

<p>Google Play provides several link formats that let you bring users to your
products in the way you want, from Android apps, web pages, ads, reviews,
articles, social media posts, and more.</p> 

<p>The link formats let you:</p>
<ul>
<li>Link to a specific app's <a href="#OpeningDetails">product details page</a></li>
<li>Link to a <a href="#OpeningPublisher">list of all of your apps</a>, or</li>
<li>Link to a <a href="#PerformingSearch">search result</a> of your choice</li>
<li>Link to a <a href="#OpeningCollection">collection</a> on Google Play</li>
</ul>

<p>If you are linking from an Android app, you can also control whether the link
launches the Play Store application or the browser, which takes the user
to the Google Play web site.</p>

<h2 id="OpeningDetails">Linking to a Product Details Page</h2>

<p>Use the format below to deep-link users directly to a specific app's product
details page. At the product details page, users can see the app description,
screenshots, reviews and more, and then install it.</p>

<p>To create the link, you need to know the app's fully qualified <em>package
name</em>, which is declared in the app's <a
href="{@docRoot}guide/topics/manifest/manifest-element.html#package">manifest
file</a>. The package name is also visible in the Developer Console. </p>

<dl>
<dt><strong>From a web site:</strong></dt>
<dd>
<pre>http://play.google.com/store/apps/details?id=&lt;package_name&gt;</pre>
</dd>
<dt><strong>From an Android app:</strong></dt>
<dd>
<pre>market://details?id=&lt;package_name&gt;</pre>
</dd>
</dl>

<p>Here's an example:</p>

<p style="margin-left:1em;"><code><a href="http://play.google.com/store/apps/details?id=com.google.android.apps.maps">http://play.google.com/store/apps/details?id=com.google.android.apps.maps</a></code></p>

<p>For details on how to send the link in an Android app, see <a href="#android-app">Linking from an Android App</a>.</p>



<h2 id="OpeningPublisher">Linking to a Product List</h2>

<p>Use the format below to link users to a list of apps published by you. The
product list lets users see all of the apps from a specific publisher, with
ratings, editorial badges, and an Install button for each. </p>

<p>To create the link, you need to know your <em>publisher name</em>, which is
available from the Developer Console. </p>

<dl>
<dt><strong>From a web site:</strong></dt>
<dd>
<pre>http://play.google.com/store/search?q=pub:&lt;publisher_name&gt;</pre>
</dd>
<dt><strong>From an Android app:</strong></dt>
<dd>
<pre>market://search?q=pub:&lt;publisher_name&gt;</pre>
</dd>
</dl>

<p>Here's an example:</p>

<p style="margin-left:1em;"><code><a href="http://play.google.com/store/search?q=pub:Google Inc.">http://play.google.com/store/search?q=pub:Google Inc.</a></code></p>

<p>For details on how to send the link in an Android app, see <a href="#android-app">Linking from an Android App</a>.</p>


<h2 id="PerformingSearch">Linking to a Search Result</h2>

<p>Use the format below to link users to a search query result on Google Play.
The search result page shows a list of apps (and optionally other content) that
match the query, with ratings, badges, and an Install button for each. </p>

<p>To create the link, you just need a search query string. If you want the
query to search outside of the Google Play Apps listings, you can remove the
<code>&c=apps</code> part of the link URL.</p>

<dl>
<dt><strong>From a web site:</strong></dt>
<dd>
<pre>http://play.google.com/store/search?q=&lt;search_query&gt;&c=apps</pre>
</dd>
<dt><strong>From an Android app:</strong></dt>
<dd>
<pre>market://search?q=&lt;seach_query&gt;&c=apps</pre>
</dd>
</dl>

<p>Here's an example:</p>

<p style="margin-left:1em;"><code><a href="http://play.google.com/store/search?q=maps&c=apps">http://play.google.com/store/search?q=maps&c=apps</a></code></p>

<p>For details on how to send the link in an Android app, see <a href="#android-app">Linking from an Android App</a>.</p>



<h2 id="OpeningCollection">Linking to a Collection</h2>

<p>If your app is featured or appears in one of the Google Play Top charts or
collections, you can use the format below to link users directly to the
collection. The collection shows a ranked list of apps in the collection, with
ratings, short descriptions, and an Install button.</p>

<dl>
<dt><strong>From a web site:</strong></dt>
<dd>
<pre>http://play.google.com/store/apps/collection/&lt;collection_name&gt;</pre>
</dd>
<dt><strong>From an Android app:</strong></dt>
<dd>
<pre>market://apps/collection/&lt;collection_name&gt;</pre>
</dd>
</dl>

<p>Here's an example:</p>

<p style="margin-left:1em;"><code><a href="http://play.google.com/store/apps/collection/editors_choice">http://play.google.com/store/apps/collection/editors_choice</a></code></p>

<p>For details on how to send the link in an Android app, see <a href="#android-app">Linking from an Android App</a>.</p>

<p class="table-caption"><strong>Table 1.</strong> Collections on Google Play</a>.</p>

<table>
<tr>
<th>Collection</th><th>collection_name</th>
</tr>
<tr><td>Staff Picks (Featured)</td><td>featured</td></tr>
<tr><td>Editor's Choice</td><td>editors_choice</td></tr>
<tr><td>Top Paid</td><td>topselling_paid</td></tr>
<tr><td>Top Free</td><td>topselling_free</td></tr>
<tr><td>Top New Free</td><td>topselling_new_free</td></tr>
<tr><td>Top New Paid</td><td>topselling_new_paid</td></tr>
<tr><td>Top Grossing</td><td>topgrossing</td></tr>
<tr><td>Trending</td><td>movers_shakers</td></tr>
<tr><td>Best Selling in Games</td><td>topselling_paid_game</td></tr>
</table>


<h2 id="android-app">Linking from an Android App</h2>

<p>There are two general formats for links that are accessible to users on
Android devices, The two formats trigger slightly different behaviors on the
device:</p>

<ul>
<li><code>market://</code> &nbsp;&nbsp; Launches the Play Store app to load the
target page.</li>
<li><code>http://</code> &nbsp;&nbsp; Lets the user choose whether to launch the
Play Store app or the browser to handle the request. If the browser handles the
request, it loads the target page on the Google Play web site.</li>
</ul>

<p>In general, you should use <code>http://</code> format for links on web pages
and <code>market://</code> for links in Android apps.</p>

<p>If you want to link to your products from an Android app, create an {@link
android.content.Intent} that opens an Google Play URL, as shown in the example
below.</p>

<pre>
Intent intent = new Intent(Intent.ACTION_VIEW);
intent.setData(Uri.parse("market://details?id=com.example.android"));
startActivity(intent);
</pre>


<h2 id="UriSummary">Summary of URL formats</h2>

<p>The table below provides a summary of the URIs currently supported by the Google Play (both on
the web and in an Android application), as discussed in the previous sections.</p>

<table>
<tr>
<th>For&nbsp;this&nbsp;result</th>
<th>Web page link</th>
<th>Android app link</th>
</tr>
<tr>
<td style="width:72px;">Show the product details page for a specific app</td>
<td><code>http://play.google.com/store/apps/details?id=&lt;package_name&gt;</code>
<td><code>market://details?id=&lt;package_name&gt;</code></td>
</tr>
<tr>
<td>Show apps by a specific publisher</td>
<td><nobr><code>http://play.google.com/store/search?q=pub:&lt;publisher_name&gt;</code></nobr></td>
<td><nobr><code>market://search?q=pub:&lt;publisher_name&gt;</code></nobr></td>
</tr>
<tr>
<td>Search for apps using a general string query.</td>
<td><code>http://play.google.com/store/search?q=&lt;query&gt;</code></td>
<td><code>market://search?q=&lt;query&gt;</code></td>
</tr>
</table>

