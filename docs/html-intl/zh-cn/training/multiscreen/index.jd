page.title=针对多种屏幕进行设计

trainingnavtop=true
startpage=true
next.title=支持各种屏幕尺寸
next.link=screensizes.html

@jd:body

<div id="tb-wrapper"> 
<div id="tb"> 
 
<h2>依存关系和前提条件</h2> 

<ul>
  <li>Android 1.6 或更高版本（示例应用则需要 2.1 或更高版本）</li>
  <li><a
href="http://developer.android.com/guide/components/activities.html">活动</a>和<a href="http://developer.android.com/guide/components/fragments.html">片段</a>的基本知识</li>
  <li>构建 Android <a
href="http://developer.android.com/guide/topics/ui/index.html">用户界面</a>的经验</li>
  <li>多个功能需要用到<a
href="{@docRoot}tools/support-library/index.html">支持库</a></li>
</ul>

<h2>您还应参阅</h2>

<ul>
  <li><a href="{@docRoot}guide/practices/screens_support.html">支持多种屏幕</a></li>
</ul>
 
<h2>试试看</h2> 
 
<div class="download-box"> 
<a href="http://developer.android.com/shareables/training/NewsReader.zip" class="button">下载示例应用</a>
<p class="filename">NewsReader.zip</p> 
</div> 
 
</div> 
</div> 
 
<p>Android 支持数百种屏幕尺寸不同的设备，包括小型手机和大型电视机。因此，请务必将您的应用设计为与所有的屏幕尺寸兼容，以便让尽可能多的用户使用该应用。</p>

<p>不过，与各种类型的设备兼容还远远不够。由于各种屏幕尺寸对用户互动产生的利弊有所不同，因此要真正满足用户需求并广获好评，您的应用不仅需要支持多种屏幕，还应针对各类屏幕配置的用户体验进行优化。<em></em><em></em></p>

<p>本教程将向您介绍如何针对多种屏幕配置优化和实施相应的用户界面。</p>

<p>各教程中都提及了一种来自一个示例应用的代码，该应用展示了关于针对多种分辨率进行优化的最佳实践。您可以在右侧下载该示例，并在自己的应用内重复使用其中的代码。</p>

<p class="note"><strong>请注意</strong>：本教程和相关的示例使用了<a
href="{@docRoot}tools/support-library/index.html">支持库</a>，以便在 3.0 版以下的 Android 上使用  <PH>{@link android.app.Fragment}</PH>  API。因此，您需要下载该库并将其添加到您的应用，才能使用本教程中涉及的所有 API。</p>
 

<h2>教程</h2> 
 
<dl> 
  <dt><b><a href="screensizes.html">支持各种屏幕尺寸</a></b></dt> 
    <dd>本教程将向您介绍如何设计可适应多种屏幕尺寸的布局（使用灵活的视图尺寸、 <PH>{@link android.widget.RelativeLayout}</PH>、屏幕尺寸和屏幕方向限定符、别名过滤器以及自动拉伸位图）。</dd> 
 
  <dt><b><a href="screendensities.html">支持各种屏幕密度</a></b></dt> 
    <dd>本教程将向您介绍如何支持具有不同像素密度的屏幕（使用非密度制约像素并提供各种密度的相应位图）。</dd> 
 
  <dt><b><a href="adaptui.html">实施自适应用户界面流程</a></b></dt> 
    <dd>本教程将向您介绍如何以可适应多种屏幕尺寸/屏幕密度组合的方式实施用户界面流程（运行时对当前布局的检测，根据当前布局做出响应，处理屏幕配置变化）。</dd> 
</dl> 
