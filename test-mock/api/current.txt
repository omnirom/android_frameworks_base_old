// Signature format: 2.0
package android.test.mock {

  @Deprecated public class MockAccountManager {
    method @Deprecated public static android.accounts.AccountManager newMockAccountManager(android.content.Context);
  }

  @Deprecated public class MockApplication extends android.app.Application {
    ctor @Deprecated public MockApplication();
  }

  public class MockContentProvider extends android.content.ContentProvider {
    ctor protected MockContentProvider();
    ctor public MockContentProvider(android.content.Context);
    ctor public MockContentProvider(android.content.Context, String, String, android.content.pm.PathPermission[]);
    method public android.content.ContentProviderResult[] applyBatch(java.util.ArrayList<android.content.ContentProviderOperation>);
    method @Deprecated public static void attachInfoForTesting(android.content.ContentProvider, android.content.Context, android.content.pm.ProviderInfo);
    method public int delete(android.net.Uri, String, String[]);
    method public String getType(android.net.Uri);
    method public android.net.Uri insert(android.net.Uri, android.content.ContentValues);
    method public boolean onCreate();
    method public android.content.res.AssetFileDescriptor openTypedAssetFile(android.net.Uri, String, android.os.Bundle);
    method public android.database.Cursor query(android.net.Uri, String[], String, String[], String);
    method public int update(android.net.Uri, android.content.ContentValues, String, String[]);
  }

  public class MockContentResolver extends android.content.ContentResolver {
    ctor public MockContentResolver();
    ctor public MockContentResolver(android.content.Context);
    method public void addProvider(String, android.content.ContentProvider);
  }

  public class MockContext extends android.content.Context {
    ctor public MockContext();
    method public boolean bindService(android.content.Intent, android.content.ServiceConnection, int);
    method public int checkCallingOrSelfPermission(String);
    method public int checkCallingOrSelfUriPermission(android.net.Uri, int);
    method public int checkCallingPermission(String);
    method public int checkCallingUriPermission(android.net.Uri, int);
    method public int checkPermission(String, int, int);
    method public int checkSelfPermission(String);
    method public int checkUriPermission(android.net.Uri, int, int, int);
    method public int checkUriPermission(android.net.Uri, String, String, int, int, int);
    method public void clearWallpaper();
    method public android.content.Context createConfigurationContext(android.content.res.Configuration);
    method public android.content.Context createContextForSplit(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method public android.content.Context createDeviceProtectedStorageContext();
    method public android.content.Context createDisplayContext(android.view.Display);
    method public android.content.Context createPackageContext(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method public String[] databaseList();
    method public boolean deleteDatabase(String);
    method public boolean deleteFile(String);
    method public boolean deleteSharedPreferences(String);
    method public void enforceCallingOrSelfPermission(String, String);
    method public void enforceCallingOrSelfUriPermission(android.net.Uri, int, String);
    method public void enforceCallingPermission(String, String);
    method public void enforceCallingUriPermission(android.net.Uri, int, String);
    method public void enforcePermission(String, int, int, String);
    method public void enforceUriPermission(android.net.Uri, int, int, int, String);
    method public void enforceUriPermission(android.net.Uri, String, String, int, int, int, String);
    method public String[] fileList();
    method public android.content.Context getApplicationContext();
    method public android.content.pm.ApplicationInfo getApplicationInfo();
    method public android.content.res.AssetManager getAssets();
    method public java.io.File getCacheDir();
    method public ClassLoader getClassLoader();
    method public java.io.File getCodeCacheDir();
    method public android.content.ContentResolver getContentResolver();
    method public java.io.File getDataDir();
    method public java.io.File getDatabasePath(String);
    method public java.io.File getDir(String, int);
    method public java.io.File getExternalCacheDir();
    method public java.io.File[] getExternalCacheDirs();
    method public java.io.File getExternalFilesDir(String);
    method public java.io.File[] getExternalFilesDirs(String);
    method public java.io.File[] getExternalMediaDirs();
    method public java.io.File getFileStreamPath(String);
    method public java.io.File getFilesDir();
    method public android.os.Looper getMainLooper();
    method public java.io.File getNoBackupFilesDir();
    method public java.io.File getObbDir();
    method public java.io.File[] getObbDirs();
    method public String getPackageCodePath();
    method public android.content.pm.PackageManager getPackageManager();
    method public String getPackageName();
    method public String getPackageResourcePath();
    method public android.content.res.Resources getResources();
    method public android.content.SharedPreferences getSharedPreferences(String, int);
    method public Object getSystemService(String);
    method public String getSystemServiceName(Class<?>);
    method public android.content.res.Resources.Theme getTheme();
    method public android.graphics.drawable.Drawable getWallpaper();
    method public int getWallpaperDesiredMinimumHeight();
    method public int getWallpaperDesiredMinimumWidth();
    method public void grantUriPermission(String, android.net.Uri, int);
    method public boolean isDeviceProtectedStorage();
    method public boolean moveDatabaseFrom(android.content.Context, String);
    method public boolean moveSharedPreferencesFrom(android.content.Context, String);
    method public java.io.FileInputStream openFileInput(String) throws java.io.FileNotFoundException;
    method public java.io.FileOutputStream openFileOutput(String, int) throws java.io.FileNotFoundException;
    method public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(String, int, android.database.sqlite.SQLiteDatabase.CursorFactory);
    method public android.database.sqlite.SQLiteDatabase openOrCreateDatabase(String, int, android.database.sqlite.SQLiteDatabase.CursorFactory, android.database.DatabaseErrorHandler);
    method public android.graphics.drawable.Drawable peekWallpaper();
    method public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter);
    method public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, int);
    method public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, String, android.os.Handler);
    method public android.content.Intent registerReceiver(android.content.BroadcastReceiver, android.content.IntentFilter, String, android.os.Handler, int);
    method public void removeStickyBroadcast(android.content.Intent);
    method public void removeStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);
    method public void revokeUriPermission(android.net.Uri, int);
    method public void revokeUriPermission(String, android.net.Uri, int);
    method public void sendBroadcast(android.content.Intent);
    method public void sendBroadcast(android.content.Intent, String);
    method public void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle);
    method public void sendBroadcastAsUser(android.content.Intent, android.os.UserHandle, String);
    method public void sendOrderedBroadcast(android.content.Intent, String);
    method public void sendOrderedBroadcast(android.content.Intent, String, android.content.BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle);
    method public void sendOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, String, android.content.BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle);
    method public void sendStickyBroadcast(android.content.Intent);
    method public void sendStickyBroadcast(android.content.Intent, android.os.Bundle);
    method public void sendStickyBroadcastAsUser(android.content.Intent, android.os.UserHandle);
    method public void sendStickyOrderedBroadcast(android.content.Intent, android.content.BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle);
    method public void sendStickyOrderedBroadcastAsUser(android.content.Intent, android.os.UserHandle, android.content.BroadcastReceiver, android.os.Handler, int, String, android.os.Bundle);
    method public void setTheme(int);
    method public void setWallpaper(android.graphics.Bitmap) throws java.io.IOException;
    method public void setWallpaper(java.io.InputStream) throws java.io.IOException;
    method public void startActivities(android.content.Intent[]);
    method public void startActivities(android.content.Intent[], android.os.Bundle);
    method public void startActivity(android.content.Intent);
    method public void startActivity(android.content.Intent, android.os.Bundle);
    method public android.content.ComponentName startForegroundService(android.content.Intent);
    method public boolean startInstrumentation(android.content.ComponentName, String, android.os.Bundle);
    method public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int) throws android.content.IntentSender.SendIntentException;
    method public void startIntentSender(android.content.IntentSender, android.content.Intent, int, int, int, android.os.Bundle) throws android.content.IntentSender.SendIntentException;
    method public android.content.ComponentName startService(android.content.Intent);
    method public boolean stopService(android.content.Intent);
    method public void unbindService(android.content.ServiceConnection);
    method public void unregisterReceiver(android.content.BroadcastReceiver);
  }

  @Deprecated public class MockCursor implements android.database.Cursor {
    ctor @Deprecated public MockCursor();
    method @Deprecated public void close();
    method @Deprecated public void copyStringToBuffer(int, android.database.CharArrayBuffer);
    method @Deprecated public void deactivate();
    method @Deprecated public byte[] getBlob(int);
    method @Deprecated public int getColumnCount();
    method @Deprecated public int getColumnIndex(String);
    method @Deprecated public int getColumnIndexOrThrow(String);
    method @Deprecated public String getColumnName(int);
    method @Deprecated public String[] getColumnNames();
    method @Deprecated public int getCount();
    method @Deprecated public double getDouble(int);
    method @Deprecated public android.os.Bundle getExtras();
    method @Deprecated public float getFloat(int);
    method @Deprecated public int getInt(int);
    method @Deprecated public long getLong(int);
    method @Deprecated public android.net.Uri getNotificationUri();
    method @Deprecated public java.util.List<android.net.Uri> getNotificationUris();
    method @Deprecated public int getPosition();
    method @Deprecated public short getShort(int);
    method @Deprecated public String getString(int);
    method @Deprecated public int getType(int);
    method @Deprecated public boolean getWantsAllOnMoveCalls();
    method @Deprecated public boolean isAfterLast();
    method @Deprecated public boolean isBeforeFirst();
    method @Deprecated public boolean isClosed();
    method @Deprecated public boolean isFirst();
    method @Deprecated public boolean isLast();
    method @Deprecated public boolean isNull(int);
    method @Deprecated public boolean move(int);
    method @Deprecated public boolean moveToFirst();
    method @Deprecated public boolean moveToLast();
    method @Deprecated public boolean moveToNext();
    method @Deprecated public boolean moveToPosition(int);
    method @Deprecated public boolean moveToPrevious();
    method @Deprecated public void registerContentObserver(android.database.ContentObserver);
    method @Deprecated public void registerDataSetObserver(android.database.DataSetObserver);
    method @Deprecated public boolean requery();
    method @Deprecated public android.os.Bundle respond(android.os.Bundle);
    method @Deprecated public void setExtras(android.os.Bundle);
    method @Deprecated public void setNotificationUri(android.content.ContentResolver, android.net.Uri);
    method @Deprecated public void setNotificationUris(android.content.ContentResolver, java.util.List<android.net.Uri>);
    method @Deprecated public void unregisterContentObserver(android.database.ContentObserver);
    method @Deprecated public void unregisterDataSetObserver(android.database.DataSetObserver);
  }

  @Deprecated public class MockDialogInterface implements android.content.DialogInterface {
    ctor @Deprecated public MockDialogInterface();
    method @Deprecated public void cancel();
    method @Deprecated public void dismiss();
  }

  @Deprecated public class MockPackageManager extends android.content.pm.PackageManager {
    ctor @Deprecated public MockPackageManager();
    method @Deprecated public void addPackageToPreferred(String);
    method @Deprecated public boolean addPermission(android.content.pm.PermissionInfo);
    method @Deprecated public boolean addPermissionAsync(android.content.pm.PermissionInfo);
    method @Deprecated public void addPreferredActivity(android.content.IntentFilter, int, android.content.ComponentName[], android.content.ComponentName);
    method @Deprecated public boolean canRequestPackageInstalls();
    method @Deprecated public String[] canonicalToCurrentPackageNames(String[]);
    method @Deprecated public int checkPermission(String, String);
    method @Deprecated public int checkSignatures(String, String);
    method @Deprecated public int checkSignatures(int, int);
    method @Deprecated public void clearInstantAppCookie();
    method @Deprecated public void clearPackagePreferredActivities(String);
    method @Deprecated public String[] currentToCanonicalPackageNames(String[]);
    method @Deprecated public void extendVerificationTimeout(int, int, long);
    method @Deprecated public android.graphics.drawable.Drawable getActivityBanner(android.content.ComponentName) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getActivityBanner(android.content.Intent) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getActivityIcon(android.content.ComponentName) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getActivityIcon(android.content.Intent) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.ActivityInfo getActivityInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getActivityLogo(android.content.ComponentName) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getActivityLogo(android.content.Intent) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public java.util.List<android.content.IntentFilter> getAllIntentFilters(String);
    method @Deprecated public java.util.List<android.content.pm.PermissionGroupInfo> getAllPermissionGroups(int);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationBanner(android.content.pm.ApplicationInfo);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationBanner(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public int getApplicationEnabledSetting(String);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationIcon(android.content.pm.ApplicationInfo);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationIcon(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.ApplicationInfo getApplicationInfo(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public CharSequence getApplicationLabel(android.content.pm.ApplicationInfo);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationLogo(android.content.pm.ApplicationInfo);
    method @Deprecated public android.graphics.drawable.Drawable getApplicationLogo(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.ChangedPackages getChangedPackages(int);
    method @Deprecated public int getComponentEnabledSetting(android.content.ComponentName);
    method @Deprecated public android.graphics.drawable.Drawable getDefaultActivityIcon();
    method @Deprecated public android.graphics.drawable.Drawable getDrawable(String, int, android.content.pm.ApplicationInfo);
    method @Deprecated public java.util.List<android.content.pm.ApplicationInfo> getInstalledApplications(int);
    method @Deprecated public java.util.List<android.content.pm.PackageInfo> getInstalledPackages(int);
    method @Deprecated public String getInstallerPackageName(String);
    method @Deprecated public byte[] getInstantAppCookie();
    method @Deprecated public int getInstantAppCookieMaxBytes();
    method @Deprecated public android.content.pm.InstrumentationInfo getInstrumentationInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.Intent getLaunchIntentForPackage(String);
    method @Deprecated public android.content.Intent getLeanbackLaunchIntentForPackage(String);
    method @Deprecated public String getNameForUid(int);
    method @Deprecated public int[] getPackageGids(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public int[] getPackageGids(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.PackageInfo getPackageInfo(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.PackageInfo getPackageInfo(android.content.pm.VersionedPackage, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.PackageInstaller getPackageInstaller();
    method @Deprecated public int getPackageUid(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public String[] getPackagesForUid(int);
    method @Deprecated public java.util.List<android.content.pm.PackageInfo> getPackagesHoldingPermissions(String[], int);
    method @Deprecated public android.content.pm.PermissionGroupInfo getPermissionGroupInfo(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.PermissionInfo getPermissionInfo(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public int getPreferredActivities(java.util.List<android.content.IntentFilter>, java.util.List<android.content.ComponentName>, String);
    method @Deprecated public java.util.List<android.content.pm.PackageInfo> getPreferredPackages(int);
    method @Deprecated public android.content.pm.ProviderInfo getProviderInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.ActivityInfo getReceiverInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.res.Resources getResourcesForActivity(android.content.ComponentName) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.res.Resources getResourcesForApplication(android.content.pm.ApplicationInfo);
    method @Deprecated public android.content.res.Resources getResourcesForApplication(String) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public android.content.pm.ServiceInfo getServiceInfo(android.content.ComponentName, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated @NonNull public java.util.List<android.content.pm.SharedLibraryInfo> getSharedLibraries(int);
    method @Deprecated public android.content.pm.FeatureInfo[] getSystemAvailableFeatures();
    method @Deprecated public String[] getSystemSharedLibraryNames();
    method @Deprecated public CharSequence getText(String, int, android.content.pm.ApplicationInfo);
    method @Deprecated public android.graphics.drawable.Drawable getUserBadgedDrawableForDensity(android.graphics.drawable.Drawable, android.os.UserHandle, android.graphics.Rect, int);
    method @Deprecated public android.graphics.drawable.Drawable getUserBadgedIcon(android.graphics.drawable.Drawable, android.os.UserHandle);
    method @Deprecated public CharSequence getUserBadgedLabel(CharSequence, android.os.UserHandle);
    method @Deprecated public android.content.res.XmlResourceParser getXml(String, int, android.content.pm.ApplicationInfo);
    method @Deprecated public boolean hasSystemFeature(String);
    method @Deprecated public boolean hasSystemFeature(String, int);
    method @Deprecated public boolean isInstantApp();
    method @Deprecated public boolean isInstantApp(String);
    method @Deprecated public boolean isPermissionRevokedByPolicy(String, String);
    method @Deprecated public boolean isSafeMode();
    method @Deprecated public java.util.List<android.content.pm.ResolveInfo> queryBroadcastReceivers(android.content.Intent, int);
    method @Deprecated public java.util.List<android.content.pm.ProviderInfo> queryContentProviders(String, int, int);
    method @Deprecated public java.util.List<android.content.pm.InstrumentationInfo> queryInstrumentation(String, int);
    method @Deprecated public java.util.List<android.content.pm.ResolveInfo> queryIntentActivities(android.content.Intent, int);
    method @Deprecated public java.util.List<android.content.pm.ResolveInfo> queryIntentActivityOptions(android.content.ComponentName, android.content.Intent[], android.content.Intent, int);
    method @Deprecated public java.util.List<android.content.pm.ResolveInfo> queryIntentContentProviders(android.content.Intent, int);
    method @Deprecated public java.util.List<android.content.pm.ResolveInfo> queryIntentServices(android.content.Intent, int);
    method @Deprecated public java.util.List<android.content.pm.PermissionInfo> queryPermissionsByGroup(String, int) throws android.content.pm.PackageManager.NameNotFoundException;
    method @Deprecated public void removePackageFromPreferred(String);
    method @Deprecated public void removePermission(String);
    method @Deprecated public android.content.pm.ResolveInfo resolveActivity(android.content.Intent, int);
    method @Deprecated public android.content.pm.ProviderInfo resolveContentProvider(String, int);
    method @Deprecated public android.content.pm.ResolveInfo resolveService(android.content.Intent, int);
    method @Deprecated public android.content.pm.ResolveInfo resolveServiceAsUser(android.content.Intent, int, int);
    method @Deprecated public void setApplicationCategoryHint(String, int);
    method @Deprecated public void setApplicationEnabledSetting(String, int, int);
    method @Deprecated public void setComponentEnabledSetting(android.content.ComponentName, int, int);
    method @Deprecated public void setInstallerPackageName(String, String);
    method @Deprecated public boolean setInstantAppCookie(@NonNull byte[]);
    method @Deprecated public void updateInstantAppCookie(@NonNull byte[]);
    method @Deprecated public void verifyPendingInstall(int, int);
  }

  @Deprecated public class MockResources extends android.content.res.Resources {
    ctor @Deprecated public MockResources();
    method @Deprecated public int getColor(int) throws android.content.res.Resources.NotFoundException;
    method @Deprecated public android.content.res.ColorStateList getColorStateList(int) throws android.content.res.Resources.NotFoundException;
    method @Deprecated public android.graphics.drawable.Drawable getDrawable(int) throws android.content.res.Resources.NotFoundException;
    method @Deprecated public android.graphics.Movie getMovie(int) throws android.content.res.Resources.NotFoundException;
    method @Deprecated public void updateConfiguration(android.content.res.Configuration, android.util.DisplayMetrics);
  }

  @Deprecated public class MockService {
    method @Deprecated public static <T extends android.app.Service> void attachForTesting(android.app.Service, android.content.Context, String, android.app.Application);
  }

}

